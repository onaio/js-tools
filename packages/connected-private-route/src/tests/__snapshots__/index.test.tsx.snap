// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConnectedPrivateRoute constructs url to add to next searchParam correctly 1`] = `
Object {
  "action": "REPLACE",
  "block": [Function],
  "canGo": [Function],
  "createHref": [Function],
  "entries": Any<Array>,
  "go": [Function],
  "goBack": [Function],
  "goForward": [Function],
  "index": 0,
  "length": 1,
  "listen": [Function],
  "location": ObjectContaining {
    "hash": "",
    "key": Any<String>,
    "pathname": "/denied",
    "search": "?next=%2Fdashboard%2Fhunter%3Fq%3Dstring%23howdy",
    "state": undefined,
  },
  "push": [Function],
  "replace": [Function],
}
`;

exports[`ConnectedPrivateRoute disableLoginProtection works with ConnectedPrivateRoute 1`] = `
<span>
  we do not sow
</span>
`;

exports[`ConnectedPrivateRoute passes props forward connected to the redux store 1`] = `
Object {
  "authenticated": false,
  "disableLoginProtection": false,
  "dispatch": Any<Function>,
  "message": "what is dead may never die",
  "path": "/dashboard",
  "redirectPath": "/denied",
  "routerDisabledRedirectPath": "/",
  "routerEnabled": true,
}
`;

exports[`ConnectedPrivateRoute renders as expected when router is disabled 1`] = `
Object {
  "action": "REPLACE",
  "block": [Function],
  "canGo": [Function],
  "createHref": [Function],
  "entries": Any<Array>,
  "go": [Function],
  "goBack": [Function],
  "goForward": [Function],
  "index": 0,
  "length": 1,
  "listen": [Function],
  "location": ObjectContaining {
    "hash": "",
    "key": Any<String>,
    "pathname": "/route_disabled",
    "search": "",
    "state": undefined,
  },
  "push": [Function],
  "replace": [Function],
}
`;

exports[`ConnectedPrivateRoute renders without crashing when authenticated 1`] = `
<span>
  I love Oov
</span>
`;

exports[`ConnectedPrivateRoute renders without crashing when authenticated 2`] = `
Object {
  "history": Any<Object>,
  "location": Any<Object>,
  "match": Any<Object>,
  "someProp": "I love Oov",
  "someProp2": "hidden",
  "staticContext": undefined,
}
`;

exports[`ConnectedPrivateRoute renders without crashing when disableLoginProtection is true 1`] = `
<span>
  treasure island
</span>
`;

exports[`ConnectedPrivateRoute renders without crashing when disableLoginProtection is true 2`] = `
Object {
  "history": Any<Object>,
  "location": Any<Object>,
  "match": Any<Object>,
  "someProp": "treasure island",
  "someProp2": "treasure",
  "staticContext": undefined,
}
`;

exports[`ConnectedPrivateRoute renders without crashing when not authenticated 1`] = `
<PrivateRoute
  authenticated={false}
  component={[Function]}
  disableLoginProtection={false}
  location={
    Object {
      "hash": "#howdy",
      "pathname": "/dashboard",
      "search": "?q=string",
      "state": Object {},
    }
  }
  path="/"
  redirectPath="/denied"
  routerDisabledRedirectPath="/"
  routerEnabled={true}
>
  <Route
    path="/"
    render={[Function]}
  >
    <Redirect
      to="/denied?next=%2Fdashboard%3Fq%3Dstring%23howdy"
    >
      <Lifecycle
        onMount={[Function]}
        onUpdate={[Function]}
        to="/denied?next=%2Fdashboard%3Fq%3Dstring%23howdy"
      />
    </Redirect>
  </Route>
</PrivateRoute>
`;

exports[`ConnectedPrivateRoute renders without crashing when not authenticated 2`] = `
Object {
  "action": "REPLACE",
  "block": [Function],
  "canGo": [Function],
  "createHref": [Function],
  "entries": Any<Array>,
  "go": [Function],
  "goBack": [Function],
  "goForward": [Function],
  "index": 0,
  "length": 1,
  "listen": [Function],
  "location": ObjectContaining {
    "hash": "",
    "key": Any<String>,
    "pathname": "/denied",
    "search": "?next=%2Fdashboard%3Fq%3Dstring%23howdy",
    "state": undefined,
  },
  "push": [Function],
  "replace": [Function],
}
`;

exports[`ConnectedPrivateRoute works when connected to the redux store 1`] = `
<PrivateRoute
  authenticated={false}
  disableLoginProtection={false}
  dispatch={[Function]}
  redirectPath="/login"
  routerDisabledRedirectPath="/"
  routerEnabled={true}
>
  <Route
    dispatch={[Function]}
    render={[Function]}
  >
    <Redirect
      to="/login?next="
    >
      <Lifecycle
        onMount={[Function]}
        onUpdate={[Function]}
        to="/login?next="
      />
    </Redirect>
  </Route>
</PrivateRoute>
`;

exports[`ConnectedPrivateRoute works when connected to the redux store 2`] = `
Object {
  "authenticated": false,
  "disableLoginProtection": false,
  "dispatch": Any<Function>,
  "redirectPath": "/login",
  "routerDisabledRedirectPath": "/",
  "routerEnabled": true,
}
`;

exports[`ConnectedPrivateRoute works when connected to the redux store 3`] = `
Object {
  "action": "REPLACE",
  "block": [Function],
  "canGo": [Function],
  "createHref": [Function],
  "entries": Any<Array>,
  "go": [Function],
  "goBack": [Function],
  "goForward": [Function],
  "index": 0,
  "length": 1,
  "listen": [Function],
  "location": ObjectContaining {
    "hash": "",
    "key": Any<String>,
    "pathname": "/login",
    "search": "?next=",
    "state": undefined,
  },
  "push": [Function],
  "replace": [Function],
}
`;
